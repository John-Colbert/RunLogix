using IO;

class Reading {
  var datetime Time;
  var double Meters;
}

class AccumulatorClass {
  var string Filename;
  var ListClass<Reading> Readings;
  private var Reading RowReading;

  Constructor {
    Filename = "";
    Readings = new(100);
    RowReading = new();
  }

  void ReadFile(string path, string filename, bool useSourceRoot) {
    Filename = filename;
    var dir = useSourceRoot ? Folders.Source : path;

    var file = XMLElementClass.Read(dir FileName(filename));
    if (file is valid) {
      var gpxEl    = file.FindFirstElement("gpx");
      var trkEl    = gpxEl.FindFirstElement("trk");
      var trkSegEl = trkEl.FindFirstElement("trkseg");
      var trkpts   = trkSegEl.Elements;
      if (trkpts is valid) {
        foreach (var trkptEl in trkpts) {
          var timeEl = trkptEl.FindFirstElement("time");
          RowReading.Time = datetime.Parse8601(timeEl.Value);

          var extensionsEl = trkptEl.FindFirstElement("extensions");
          var speedEl      = extensionsEl.FindFirstElement("speed");
          var v = speedEl.Value;
          if (v is valid) {
            RowReading.Meters = v as double;
            Readings.Add(RowReading);
            RowReading = new();
          }
        }
      }
    }
  }
}
